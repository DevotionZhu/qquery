{"name":"The little pyqgis query engine","tagline":"A basic query engine for pyqgis","body":"A mini query engine for pyqgis to query features from a layer. \r\n\r\nIt defines a simple SQL style API to create a query\r\n\r\n```python\r\nq = (query(layer).where(\"postcode > 6164 OR postcode < 6167\")\r\n                 .select('assessment', 'address', 'lot')()\r\n```\r\nResults are returned via a generator so results are returned as needed.\r\n\r\n```python\r\n>>> q.next()\r\n{\r\n'assessment': u'4309719', \r\n'lot': u'LOT 79', \r\n'address': u'BIRCHLEY RD'\r\n}\r\n>>> q.next()\r\n{\r\n'assessment': u'23512', \r\n'lot': u'LOT 124', \r\n'address': u'BIRCHLEY RD'\r\n}\r\n```\r\n\r\nNormal Python functions can be used in a `.select()` and `.where()`\r\n\r\n```python\r\n>>> def checkassessment(feature):\r\n...    if feature['assessment'] is None:\r\n...        return False     \r\n...    return int(feature['assessment']) == 4315968\r\n\r\n>>> q = (query(layer).where(\"postcode = 6164\")\r\n                     .where(checkassessment)\r\n                     .select('assessment', \r\n                             'address', \r\n                             'lot',\r\n                             geom = lambda f: f.geometry(),\r\n                             mylot = lambda f: int(f['house_numb']) * 100))\r\n>>> q().next()\r\n{\r\n'geom': <qgis.core.QgsGeometry object at 0x1A8E64B0>, \r\n'assessment': u'4309719', \r\n'mylot': 7900, \r\n'lot': u'LOT 79', \r\n'address': u'BIRCHLEY RD'\r\n}\r\n``` \r\n\r\n### Installing\r\n\r\n- Just download the code from [here](https://github.com/NathanW2/little-pyqgis-query-engine/zipball/master). \r\n- Add the files to your Python project\r\n- ``from query import query``","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}